---
- name: Determine if Homebrew is already installed.
  ansible.builtin.shell:
    cmd: command -v brew > /dev/null 2>&1
    executable: /bin/bash
  register: _brew_installed_result
  ignore_errors: true
  changed_when: false

- name: Install missing Homebrew
  when: _brew_installed_result.rc != 0
  block:
    - name: Get the installation script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
        dest: "/tmp/install.sh"
        mode: "0777"
      register: download_brew

    - name: Run the Homebrew install script
      ansible.builtin.command: /tmp/install.sh
      args:
        creates: "{{ _default_brew_path }}/brew"
      become: true
      become_user: "{{ day_one_ops_deploy_user }}"
      environment:
        NONINTERACTIVE: "1"

    - name: Clean-up the install script
      ansible.builtin.file:
        path: /tmp/install.sh
        state: absent

- name: Determine if brew-file is already installed
  ansible.builtin.shell:
    cmd: command -v brew-file > /dev/null 2>&1
    executable: /bin/bash
  register: _brewfile_installed_result
  ignore_errors: true
  changed_when: false

- name: Install and configure brew-file
  when: _brewfile_installed_result.rc != 0
  block:
    - name: Install brew-file as an easy way to manage installs
      ansible.builtin.shell:
        cmd: 'eval "$({{ _default_brew_path }}/brew shellenv)" && brew install rcmdnk/file/brew-file'
        creates: "{{ _default_brew_path }}/brew-file"

    - name: Create config file location
      ansible.builtin.file:
        path: "{{ _deploy_user_home }}/.config/brewfile/"
        state: directory
        owner: "{{ _deploy_user_uid }}"
        group: "{{ _deploy_user_gid }}"
        mode: "0750"

- name: Configure user's shell
  ansible.builtin.include_tasks:
    file: "{{ _deploy_user_shell }}.yml"

- name: Now install user requested packages
  block:
    - name: Template Brewfile
      ansible.builtin.template:
        src: Brewfile.j2
        dest: "{{ _deploy_user_home }}/.config/brewfile/Brewfile"
        mode: "0644"
        owner: "{{ _deploy_user_uid }}"
        group: "{{ _deploy_user_gid }}"

    - name: Now install the applications
      ansible.builtin.shell:
        cmd: 'eval "$({{ _default_brew_path }}/brew shellenv)" && brew file install --appstore 0'
      register: _brew_file_result
      environment:
        HOMEBREW_BREWFILE: "{{ _deploy_user_home }}/.config/brewfile/Brewfile"
      changed_when:
        - '"Installing" in _brew_file_result.stdout'
