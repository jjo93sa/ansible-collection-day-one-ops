---
- name: Determine if Homebrew is already installed.
  ansible.builtin.shell:
    cmd: command -v brew > /dev/null 2>&1
  register: brew_installed
  #  no_log: true
  ignore_errors: true
  changed_when: false

- name: Install missing Homebrew
  when: brew_installed.rc != 0
  block:
    - name: Get the installation script
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"
        dest: "/tmp/install.sh"
        mode: "0777"
      register: download_brew

    - name: Run the Homebrew install script
      ansible.builtin.command: /tmp/install.sh
      environment:
        NONINTERACTIVE: "1"

    - name: Clean-up the install script
      ansible.builtin.file:
        path: /tmp/install.sh
        state: absent

    - name: Determine user properties
      ansible.builtin.include_tasks:
        file: "{{ (ansible_os_family == 'Darwin') | ternary('user_macos.yml', 'user_linux.yml') }}"

    - name: Configure user's shell
      ansible.builtin.include_tasks:
        file: "{{ _deploy_user_shell }}.yml"

    - name: Install and configure brew-file
      block:
        - name: Install brew-file as an easy way to manage installs
          ansible.builtin.shell:
            cmd: brew install rcmdnk/file/brew-file

    - name: Now install user requested packages
      block:
        - name: Template Brewfile
          ansible.builtin.template:
            src: Brewfile.j2
            dest: "{{ _deploy_user_home }}/.config/brewfile/Brewfile"
            mode: "0644"
            owner: "{{ day_one_ops_deploy_user }}"
            group: "{{ day_one_ops_deploy_user }}"

        - name: Now install the applications
          ansible.builtin.shell:
            cmd: brew file install --appstore 0
          environment:
            HOMEBREW_BREWFILE: "{{ _deploy_user_home }}/.config/brewfile/Brewfile"
