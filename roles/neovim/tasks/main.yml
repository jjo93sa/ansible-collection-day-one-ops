---
# This role installs and configures neovim
# We run this as deploy_user
- name: Install and configure neovim
  become: true
  become_user: "{{ day_one_ops_deploy_user }}"
  block:
    - name: Is neovim already installed
      ansible.builtin.shell:
        cmd: 'eval "$({{ _default_brew_path }}/brew shellenv)" && which nvim'
        executable: /bin/bash
      register: _query_neovim_result
      ignore_errors: true
      changed_when: false

    - name: Install missing neovim with homebrew
      ansible.builtin.shell:
        cmd: 'eval "$({{ _default_brew_path }}/brew shellenv)" && brew file install neovim'
      register: _install_neovim_result
      changed_when:
        - '"Installing neovim" in _install_neovim_result.stdout'
      when: _query_neovim_result.rc != 0

    - name: Does the dotfiles repo exist?
      ansible.builtin.stat:
        path: "{{ _deploy_user_dotfiles }}"
      register: _dotfiles_result

    - name: Check stow binary exists
      ansible.builtin.shell:
        cmd: 'eval "$({{ _default_brew_path }}/brew shellenv)" && which stow'
        executable: /bin/bash
      register: _query_stow_result
      ignore_errors: true
      changed_when: false

    - name: Link the configuration
      ansible.builtin.shell:
        cmd: "stow -d {{ _deploy_user_dotfiles }} -t {{ _deploy_user_home }} neovim"
      when:
        - _dotfiles_result.stat.exists
        - _query_stow_result.rc == 0
      register: _stow_link_result

    - name: Debug stow link result
      ansible.builtin.debug:
        var: _stow_link_result
