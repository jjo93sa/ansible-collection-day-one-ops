---
# This role clones a user's dotfiles from a git repo so they may
# be later symlinked by GNU stow

#TODO: Express dependency on role user_config

- name: Check for repository access
  ansible.builtin.debug:
    msg: "TODO: check that the repo exists"
  when:
    - (day_one_ops_dotfiles_url_user is defined) and day_one_ops_dotfiles_url_user

- name: Debug some vars
  ansible.builtin.debug:
    msg: "{{ day_one_ops_dotfiles_url_user }} and {{ day_one_ops_dotfiles_dest_default }}"

- name: Create the desired location
  ansible.builtin.file:
    state: directory
    path: "{{ _deply_user_dotfiles }}"
    owner: "{{ _deploy_user_uid }}"
    group: "{{ _deploy_user_gid }}"
    mode: "0700"
  become: true

- name: Clone the repository
  ansible.builtin.git:
    clone: true
    remote: origin
    repo: "{{ day_one_ops_dotfiles_url_user }}"
    dest: "{{ _deploy_user_dotfiles }}"
    version: "{{ day_one_ops_dotfiles_version_user | default(day_one_ops_dotfiles_version_default) }}"
  become: true
  become_user: "{{ day_one_ops_deploy_user }}"
  register: _git_clone_result
  when:
    - (day_one_ops_dotfiles_url_user is defined) and day_one_ops_dotfiles_url_user

- name: Debug the git clone operation
  ansible.builtin.debug:
    msg: " *** Git clone result: {{ _git_clone_result }}"

- name: Now we have the dotfiles, set a fact
  ansible.builtin.set_fact:
    _deploy_user_dotfiles: "{{ day_one_ops_dotfiles_dest_user | default(day_one_ops_dotfiles_dest_default) }}"
  #TODO: make this conditional on success of clone
